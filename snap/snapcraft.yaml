name: ramin-image-stream
summary: An applet to stream pi camera over http.
description: |
  An applet to stream pi camera over http.
version: git
base: core22
confinement: strict
architectures:
  - build-on: arm64


apps:
  ramin-image-stream:
    command: bin/flask-wrapper
    daemon: simple
    restart-condition: always
    plugs: [
      home,
      network,
      network-bind,
      opengl,
      camera
    ]
    environment:
      FLASK_APP: ./server.py
      LC_ALL: C.UTF-8
      LANG: C.UTF-8


parts:
  python-packages:
    plugin: python
    source: .
    python-requirements: [
      'requirements.txt'
    ]
    build-packages: [
      libcap-dev
    ]
    after: [
      libcamera
    ]
    stage-packages: [
      libgl1,
      libice6,
      libsm6,
      libx11-6,
      libxext6,
      libxcb1,
      libatlas-base-dev,
      ffmpeg,
      libopenjp2-7
    ]

  flask-server:
    plugin: dump
    source: .
    organize:
      server.py: bin/
      flask-wrapper: bin/

  libcamera:
    plugin: meson
    source: https://github.com/FC-Rover/libcamera.git
    meson-parameters: [
      '--prefix=$CRAFT_PART_INSTALL',
      '--libdir=$CRAFT_PART_INSTALL/lib',
      '-D pycamera=enabled'
    ]
    build-packages: [
      build-essential,
      meson,
      ninja-build,
      pkg-config,
      pybind11-dev,
      python3-pybind11,
      cmake,
      libgtest-dev,
      libyaml-dev,
      python3-yaml,
      python3-ply,
      python3-jinja2,
      libgnutls28-dev,
      libssl-dev,
      openssl,
      libdw-dev,
      libunwind-dev,
      libudev-dev,
      python3-sphinx,
      graphviz,
      texlive-latex-extra,
      libgstreamer1.0-dev,
      libgstreamer-plugins-base1.0-dev,
      libdrm-dev,
      libjpeg-dev,
      libsdl2-dev,
      qtbase5-dev,
      libqt5core5a,
      libqt5gui5,
      libqt5widgets5,
      qttools5-dev-tools,
      libtiff-dev,
      liblttng-ust-dev,
      lttng-tools,
      libexif-dev,
      libjpeg-dev,
      libevent-dev,
      abi-compliance-checker
    ]
    override-build: |
      cp -r $CRAFT_PART_SRC/* $CRAFT_PART_BUILD/
      meson setup build --prefix=$CRAFT_PROJECT_DIR/usr --libdir=$CRAFT_PROJECT_DIR/lib -D pycamera=enabled
#      meson setup build --libdir=/lib -D pycamera=enabled
      ninja -C build install
